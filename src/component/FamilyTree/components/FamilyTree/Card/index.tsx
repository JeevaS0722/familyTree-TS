/* eslint-disable complexity */
// src/component/FamilyTree/components/FamilyTree/Card/index.tsx
import React, { useRef, useCallback, useState } from 'react';
import { useNodeAnimation } from '../../../hooks/useNodeAnimation';
import { CardProps } from './types';

const Card: React.FC<CardProps> = ({
  node,
  cardDimensions,
  showMiniTree,
  transitionTime,
  treeData,
  initialRender = false,
  onClick,
  onEdit,
  onMouseEnter,
  onMouseLeave,
  onAddChild,
  onAddPartner,
  onDelete,
  onUpdateRelationship,
  onPersonAdd,
}) => {
  const cardRef = useRef<SVGGElement>(null);

  // UI state
  const [showRelationDropdown, setShowRelationDropdown] = useState(false);
  const [showOfferPopup, setShowOfferPopup] = useState(false);
  const [headerHovered, setHeaderHovered] = useState(false);
  const [showNotesPanel, setShowNotesPanel] = useState(false);
  const [notesPanelClosing, setNotesPanelClosing] = useState(false);
  const [arrowRotated, setArrowRotated] = useState(false);
  const [badgeHovered, setBadgeHovered] = useState(false);

  // Animation hook - pass initialRender flag
  useNodeAnimation(cardRef, node, transitionTime, treeData, initialRender);

  // Event handlers
  const handleClick = useCallback(() => {
    if (onClick) {
      onClick(node);
    }
  }, [onClick, node]);

  const handleMouseEnter = useCallback(() => {
    if (!node.data.main && onMouseEnter) {
      onMouseEnter(node);
    }
  }, [node, onMouseEnter]);

  const handleMouseLeave = useCallback(() => {
    if (!node.data.main && onMouseLeave) {
      onMouseLeave(node);
    }
  }, [node, onMouseLeave]);

  const toggleNotesPanel = useCallback(() => {
    console.log('toggleNotesPanel', showNotesPanel);
    if (showNotesPanel) {
      setNotesPanelClosing(true);
      setArrowRotated(false);
      setTimeout(() => {
        setShowNotesPanel(false);
        setNotesPanelClosing(false);
      }, 300);
    } else {
      setShowNotesPanel(true);
      setArrowRotated(true);
    }
  }, [showNotesPanel]);

  // Prepare data
  const isDeceased = !!node.data.data.deceased;
  const hasNotes = !!node.data.data.is_new_notes;
  const firstName = node.data.data.firstName || '';
  const lastName = node.data.data.lastName || '';
  const displayName = firstName + (lastName ? ' ' + lastName : '');
  const age = node.data.data.age || '00';
  const birth = node.data.data.dOB || '00/00/00';
  const death = node.data.data.decDt || '00/00/00';
  const address = node.data.data.address || '';
  const relationshipType =
    node.data.data.relationshipType || 'Relationship to file';
  const divisionOfInterest =
    node.data.data.division_of_interest || 'Division of Interest';
  const percentage = node.data.data.percentage || '0.000 %';
  const isMale = node.data.data.gender === 'M';

  // Calculate card width and height
  const cardWidth = 300;
  const cardHeight = 179;
  const leftColumnWidth = cardWidth / 2;
  const rightColumnWidth = cardWidth / 2;

  return (
    <g
      ref={cardRef}
      className={`card_cont`}
      transform={`translate(${node.x}, ${node.y})`}
      style={{ opacity: 0 }}
      data-id={node.data.id}
      onMouseEnter={handleMouseEnter}
      onMouseLeave={handleMouseLeave}
    >
      {/* Relationship Badge */}
      <g
        className="relationship-badge"
        transform={`translate(${-cardDimensions.w / 2 + 15}, ${-cardDimensions.h / 2 - 30})`}
        style={{ cursor: 'pointer' }}
      >
        <rect
          width={125}
          height={25}
          rx={10}
          ry={10}
          fill="#D9D9D9"
          stroke={isDeceased ? 'red' : '#D9D9D9'}
          strokeWidth={1}
        />
        <text
          x={62.5}
          y={14}
          fontSize={12}
          fontWeight="bold"
          textAnchor="middle"
          fill="#000000"
        >
          {relationshipType}
        </text>
      </g>

      {/* Main Card */}
      <g
        className="card"
        transform={`translate(${-cardWidth / 2}, ${-cardHeight / 2})`}
      >
        {/* Card Background with Rounded Corners */}
        <rect
          width={cardWidth}
          height={cardHeight}
          rx={20}
          ry={20}
          fill="#D9D9D9"
          stroke={isDeceased ? '#FF0000' : 'none'}
          strokeWidth={isDeceased ? 2 : 0}
        />

        {/* Header */}
        <g className="card-header" onClick={handleClick}>
          <rect width={cardWidth} height={40} rx={20} ry={20} fill="white" />
          <rect y={20} width={cardWidth} height={20} fill="white" />
          <text
            x={10}
            y={25}
            fontSize={18}
            fontWeight="bolder"
            fill="#000000"
            dominantBaseline="middle"
          >
            {displayName}
          </text>
          {/* Header Arrow */}
          <g transform={`translate(${cardWidth - 25}, 15)`}>
            <svg
              width="20"
              height="25"
              viewBox="0 0 21 29"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g filter="url(#filter0_d_808_144)">
                <path
                  d="M14.7801 11.0467L7.2809 18.7736C7.21122 18.8454 7.12851 18.9023 7.03747 18.9411C6.94644 18.98 6.84887 19 6.75033 19C6.6518 19 6.55423 18.98 6.46319 18.9411C6.37216 18.9023 6.28944 18.8454 6.21977 18.7736C6.15009 18.7018 6.09482 18.6165 6.05712 18.5227C6.01941 18.4289 6 18.3284 6 18.2269C6 18.1254 6.01941 18.0248 6.05712 17.931C6.09482 17.8372 6.15009 17.752 6.21977 17.6802L13.1893 10.5L6.21977 3.31979C6.07905 3.17481 6 2.97816 6 2.77312C6 2.56807 6.07905 2.37143 6.21977 2.22644C6.36048 2.08145 6.55133 2 6.75033 2C6.94933 2 7.14018 2.08145 7.2809 2.22644L14.7801 9.95332C14.8498 10.0251 14.9051 10.1103 14.9428 10.2041C14.9806 10.2979 15 10.3985 15 10.5C15 10.6015 14.9806 10.7021 14.9428 10.7959C14.9051 10.8897 14.8498 10.9749 14.7801 11.0467Z"
                  fill="black"
                />
                <path
                  d="M5.50221 16.9837L5.50216 16.9838C5.34111 17.1497 5.21489 17.3451 5.12928 17.558C5.04369 17.7709 5 17.9981 5 18.2269C5 18.4556 5.0437 18.6828 5.12928 18.8957C5.21488 19.1087 5.34111 19.3041 5.50216 19.47C5.66329 19.636 5.85619 19.7694 6.07066 19.8609C6.2852 19.9524 6.51624 20 6.75033 20C6.98442 20 7.21547 19.9524 7.43001 19.8609C7.64448 19.7694 7.83738 19.636 7.9985 19.47L15.4973 11.7435C15.4974 11.7434 15.4974 11.7434 15.4975 11.7433C15.4976 11.7432 15.4976 11.7432 15.4977 11.7431C15.6587 11.5773 15.7849 11.382 15.8706 11.1691C15.9563 10.9562 16 10.7289 16 10.5C16 10.2711 15.9563 10.0438 15.8706 9.83086L14.9428 10.2041L15.8706 9.83086C15.7849 9.61784 15.6585 9.4224 15.4973 9.25647L7.9985 1.52999C7.67271 1.19431 7.22437 1 6.75033 1C6.2763 1 5.82795 1.19431 5.50217 1.52999C5.17736 1.86465 5 2.31235 5 2.77312C5 3.23388 5.17736 3.68158 5.50216 4.01625L5.50221 4.0163L11.7957 10.5L5.50221 16.9837Z"
                  stroke="black"
                  strokeWidth="2"
                />
              </g>
              <defs>
                <filter
                  id="filter0_d_808_144"
                  x="0"
                  y="0"
                  width="21"
                  height="29"
                  filterUnits="userSpaceOnUse"
                  colorInterpolationFilters="sRGB"
                >
                  <feFlood floodOpacity="0" result="BackgroundImageFix" />
                  <feColorMatrix
                    in="SourceAlpha"
                    type="matrix"
                    values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                    result="hardAlpha"
                  />
                  <feOffset dy="4" />
                  <feGaussianBlur stdDeviation="2" />
                  <feComposite in2="hardAlpha" operator="out" />
                  <feColorMatrix
                    type="matrix"
                    values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
                  />
                  <feBlend
                    mode="normal"
                    in2="BackgroundImageFix"
                    result="effect1_dropShadow_808_144"
                  />
                  <feBlend
                    mode="normal"
                    in="SourceGraphic"
                    in2="effect1_dropShadow_808_144"
                    result="shape"
                  />
                </filter>
              </defs>
            </svg>
          </g>
        </g>

        {/* Left Column - Gender specific color */}
        <g className="left-column" transform={`translate(0, 0)`}>
          <rect
            x={0}
            y={40}
            width={leftColumnWidth}
            height={cardHeight - 54}
            fill={isMale ? '#7EADFF' : '#FF96BC'}
            rx={10}
          />
          <path
            d={`
              M0,40 
              H${leftColumnWidth} 
              V${cardHeight - 14} 
              H10 
              Q0,${cardHeight - 14} 0,${cardHeight - 24} 
              V40
              Z
            `}
            fill={isMale ? '#7EADFF' : '#FF96BC'}
          />
          <g
            className="card-details"
            fill="black"
            transform="translate(10, 10)"
          >
            <text y={50} fontSize={12} fontWeight="bold">
              Age: {age}
            </text>
            <text y={70} fontSize={12} fontWeight="bold">
              Birth: {birth}
            </text>
            <text y={90} fontSize={12} fontWeight="bold">
              Death: {death}
            </text>
            <text y={110} fontSize={12} fontWeight="bold">
              Address:
            </text>
            <text y={125} fontSize={10} fontWeight="bold">
              Arachalur, Tamil Nadu, India
            </text>
          </g>
        </g>

        {/* Right Column - Lighter color */}
        <g className="right-column" transform={`translate(0, 0)`}>
          <path
            d={`
    M${leftColumnWidth},40 
    H${leftColumnWidth + rightColumnWidth} 
    V${cardHeight - 24} 
    Q${leftColumnWidth + rightColumnWidth},${cardHeight - 14} ${leftColumnWidth + rightColumnWidth - 10},${cardHeight - 14}
    H${leftColumnWidth} 
    V40
    Z
  `}
            fill={isMale ? '#C8DCFF' : '#FFC8DC'}
          />

          {/* Division of Interest Section */}
          <rect
            x={162}
            y={45}
            width={125}
            height={20}
            rx={5}
            ry={5}
            stroke="black"
            strokeWidth={1}
            fill={isMale ? '#C8DCFF' : '#FFC8DC'}
          />
          <text
            x={224}
            y={60}
            textAnchor="middle"
            fontSize={12}
            fontWeight="bold"
            fill="black"
          >
            {divisionOfInterest}
          </text>

          {/* Percentage Field with Down Arrow */}
          <rect
            x={162}
            y={75}
            width={125}
            height={20}
            rx={5}
            ry={5}
            stroke="black"
            strokeWidth={1}
            fill={isMale ? '#C8DCFF' : '#FFC8DC'}
          />
          <text
            x={180}
            y={90}
            textAnchor="start"
            fontSize={14}
            fontWeight="bold"
            fill="black"
          >
            {percentage}
          </text>
          <g transform={`translate(0,0)`} style={{ cursor: 'pointer' }}>
            <rect x="266" y="78" width="15" height="15" fill="transparent" />
            <svg
              x={270}
              y={80}
              width="8"
              height="11"
              viewBox="0 0 8 13"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M0.772624 10.8045L0.772601 10.8046C0.684289 10.8988 0.615809 11.0089 0.56961 11.1278C0.523423 11.2468 0.5 11.3732 0.5 11.5003C0.5 11.6273 0.523423 11.7538 0.56961 11.8727C0.615809 11.9917 0.684289 12.1018 0.772601 12.196C0.860978 12.2903 0.967658 12.3669 1.08746 12.4198C1.20735 12.4728 1.33711 12.5006 1.46901 12.5006C1.60091 12.5006 1.73067 12.4728 1.85056 12.4198C1.97036 12.3669 2.07704 12.2903 2.16542 12.196L6.85273 7.1962C6.94113 7.10201 7.00969 6.99188 7.05594 6.87287C7.10218 6.75389 7.12563 6.62737 7.12563 6.50028C7.12563 6.37319 7.10218 6.24667 7.05594 6.12769C7.00969 6.00868 6.94113 5.89855 6.85273 5.80435L2.16542 0.804557C1.98655 0.613767 1.7368 0.5 1.46901 0.5C1.20122 0.5 0.951467 0.613767 0.772601 0.804557C0.59476 0.994255 0.5 1.24503 0.5 1.50028C0.5 1.75553 0.59476 2.0063 0.772601 2.196L0.772624 2.19602L4.80841 6.50028L0.772624 10.8045Z"
                fill="black"
                stroke="black"
              />
            </svg>
          </g>
          {/* Icons Row */}
          <g transform="translate(172, 120)">
            {/* background “container” */}
            <rect
              x={-10}
              y={-20}
              width={125}
              height={40}
              fill="transparent"
              stroke="black"
              strokeWidth={1}
            />
            {/* icons & labels */}
            <g transform="translate(-10, -10)">
              {/* Heir Icon */}
              <svg
                width="28"
                height="28"
                viewBox="0 0 28 28"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M28 14C28 21.732 21.732 28 14 28C6.26801 28 0 21.732 0 14C0 6.26801 6.26801 0 14 0C21.732 0 28 6.26801 28 14Z"
                  fill="#00BF0A"
                />
                <path
                  d="M20 16.8571C19.9989 17.7662 19.5771 18.6377 18.8272 19.2805C18.0773 19.9232 17.0605 20.2848 16 20.2857H14.6667V21.4286C14.6667 21.5801 14.5964 21.7255 14.4714 21.8326C14.3464 21.9398 14.1768 22 14 22C13.8232 22 13.6536 21.9398 13.5286 21.8326C13.4036 21.7255 13.3333 21.5801 13.3333 21.4286V20.2857H12C10.9395 20.2848 9.9227 19.9232 9.17279 19.2805C8.42288 18.6377 8.0011 17.7662 8 16.8571C8 16.7056 8.07024 16.5602 8.19526 16.4531C8.32029 16.3459 8.48986 16.2857 8.66667 16.2857C8.84348 16.2857 9.01305 16.3459 9.13807 16.4531C9.2631 16.5602 9.33333 16.7056 9.33333 16.8571C9.33333 17.4634 9.61428 18.0447 10.1144 18.4734C10.6145 18.902 11.2928 19.1429 12 19.1429H16C16.7072 19.1429 17.3855 18.902 17.8856 18.4734C18.3857 18.0447 18.6667 17.4634 18.6667 16.8571C18.6667 16.2509 18.3857 15.6696 17.8856 15.2409C17.3855 14.8122 16.7072 14.5714 16 14.5714H12.6667C11.6058 14.5714 10.5884 14.2102 9.83824 13.5672C9.08809 12.9242 8.66667 12.0522 8.66667 11.1429C8.66667 10.2335 9.08809 9.36147 9.83824 8.71849C10.5884 8.07551 11.6058 7.71429 12.6667 7.71429H13.3333V6.57143C13.3333 6.41988 13.4036 6.27453 13.5286 6.16737C13.6536 6.0602 13.8232 6 14 6C14.1768 6 14.3464 6.0602 14.4714 6.16737C14.5964 6.27453 14.6667 6.41988 14.6667 6.57143V7.71429H15.3333C16.3939 7.71523 17.4106 8.07676 18.1605 8.71954C18.9104 9.36231 19.3322 10.2338 19.3333 11.1429C19.3333 11.2944 19.2631 11.4398 19.1381 11.5469C19.013 11.6541 18.8435 11.7143 18.6667 11.7143C18.4899 11.7143 18.3203 11.6541 18.1953 11.5469C18.0702 11.4398 18 11.2944 18 11.1429C18 10.5366 17.719 9.95527 17.219 9.52661C16.7189 9.09796 16.0406 8.85714 15.3333 8.85714H12.6667C11.9594 8.85714 11.2811 9.09796 10.781 9.52661C10.281 9.95527 10 10.5366 10 11.1429C10 11.7491 10.281 12.3304 10.781 12.7591C11.2811 13.1878 11.9594 13.4286 12.6667 13.4286H16C17.0605 13.4295 18.0773 13.791 18.8272 14.4338C19.5771 15.0766 19.9989 15.9481 20 16.8571Z"
                  fill="black"
                />
              </svg>
              {/* Notes Icon */}
              <svg
                width="27"
                height="27"
                x={30}
                viewBox="0 0 27 27"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M10.7083 11.6667C10.7083 11.4125 10.8093 11.1687 10.989 10.989C11.1687 10.8093 11.4125 10.7083 11.6667 10.7083H19.3333C19.5875 10.7083 19.8312 10.8093 20.011 10.989C20.1907 11.1687 20.2917 11.4125 20.2917 11.6667C20.2917 11.9208 20.1907 12.1646 20.011 12.3443C19.8312 12.524 19.5875 12.625 19.3333 12.625H11.6667C11.4125 12.625 11.1687 12.524 10.989 12.3443C10.8093 12.1646 10.7083 11.9208 10.7083 11.6667ZM11.6667 16.4583H19.3333C19.5875 16.4583 19.8312 16.3574 20.011 16.1776C20.1907 15.9979 20.2917 15.7542 20.2917 15.5C20.2917 15.2458 20.1907 15.0021 20.011 14.8224C19.8312 14.6426 19.5875 14.5417 19.3333 14.5417H11.6667C11.4125 14.5417 11.1687 14.6426 10.989 14.8224C10.8093 15.0021 10.7083 15.2458 10.7083 15.5C10.7083 15.7542 10.8093 15.9979 10.989 16.1776C11.1687 16.3574 11.4125 16.4583 11.6667 16.4583ZM15.5 18.375H11.6667C11.4125 18.375 11.1687 18.476 10.989 18.6557C10.8093 18.8354 10.7083 19.0792 10.7083 19.3333C10.7083 19.5875 10.8093 19.8312 10.989 20.011C11.1687 20.1907 11.4125 20.2917 11.6667 20.2917H15.5C15.7542 20.2917 15.9979 20.1907 16.1776 20.011C16.3574 19.8312 16.4583 19.5875 16.4583 19.3333C16.4583 19.0792 16.3574 18.8354 16.1776 18.6557C15.9979 18.476 15.7542 18.375 15.5 18.375ZM27 5.91667V18.9368C27.0008 19.1886 26.9515 19.4381 26.8551 19.6706C26.7586 19.9032 26.6169 20.1143 26.4382 20.2917L20.2917 26.4382C20.1143 26.6169 19.9032 26.7586 19.6706 26.8551C19.4381 26.9515 19.1886 27.0008 18.9368 27H5.91667C5.40833 27 4.92082 26.7981 4.56138 26.4386C4.20193 26.0792 4 25.5917 4 25.0833V5.91667C4 5.40833 4.20193 4.92082 4.56138 4.56138C4.92082 4.20193 5.40833 4 5.91667 4H25.0833C25.5917 4 26.0792 4.20193 26.4386 4.56138C26.7981 4.92082 27 5.40833 27 5.91667ZM5.91667 25.0833H18.375V19.3333C18.375 19.0792 18.476 18.8354 18.6557 18.6557C18.8354 18.476 19.0792 18.375 19.3333 18.375H25.0833V5.91667H5.91667V25.0833ZM20.2917 20.2917V23.7297L23.7285 20.2917H20.2917Z"
                  fill="black"
                />
                <path d="M5 0L9.33013 8.25H0.669873L5 0Z" fill="#FF0000" />
                <path
                  d="M9.85712 7.38401L5.9533 0.549924C5.85575 0.382492 5.71648 0.243666 5.5493 0.147205C5.38213 0.0507451 5.19285 0 5.00022 0C4.8076 0 4.61832 0.0507451 4.45114 0.147205C4.28396 0.243666 4.1447 0.382492 4.04715 0.549924L0.143329 7.38401C0.0494656 7.54595 0 7.73014 0 7.9177C0 8.10526 0.0494656 8.28945 0.143329 8.4514C0.239632 8.61984 0.37866 8.75942 0.546148 8.85582C0.713635 8.95222 0.90355 9.00196 1.0964 8.99994H8.90404C9.09674 9.0018 9.28647 8.95198 9.45379 8.85559C9.62111 8.7592 9.76 8.61971 9.85622 8.4514C9.95022 8.28953 9.99984 8.10538 10 7.91782C10.0002 7.73026 9.95084 7.54603 9.85712 7.38401ZM9.23795 8.09095C9.20392 8.14947 9.15506 8.19781 9.09638 8.23103C9.03771 8.26424 8.97132 8.28112 8.90404 8.27995H1.0964C1.02912 8.28112 0.962738 8.26424 0.904062 8.23103C0.845385 8.19781 0.796526 8.14947 0.762493 8.09095C0.731667 8.03834 0.715405 7.97835 0.715405 7.91725C0.715405 7.85615 0.731667 7.79616 0.762493 7.74355L4.66631 0.909471C4.70103 0.851229 4.75011 0.803035 4.80878 0.769577C4.86745 0.736119 4.93371 0.718535 5.00112 0.718535C5.06852 0.718535 5.13478 0.736119 5.19345 0.769577C5.25212 0.803035 5.3012 0.851229 5.33592 0.909471L9.23974 7.74355C9.2703 7.79633 9.28625 7.85639 9.28593 7.9175C9.28562 7.9786 9.26905 8.0385 9.23795 8.09095ZM4.6431 5.39998V3.59999C4.6431 3.50452 4.68072 3.41295 4.7477 3.34544C4.81467 3.27793 4.90551 3.24 5.00022 3.24C5.09494 3.24 5.18577 3.27793 5.25275 3.34544C5.31972 3.41295 5.35735 3.50452 5.35735 3.59999V5.39998C5.35735 5.49545 5.31972 5.58702 5.25275 5.65453C5.18577 5.72205 5.09494 5.75997 5.00022 5.75997C4.90551 5.75997 4.81467 5.72205 4.7477 5.65453C4.68072 5.58702 4.6431 5.49545 4.6431 5.39998ZM5.53591 7.01996C5.53591 7.12676 5.50449 7.23116 5.44563 7.31997C5.38677 7.40877 5.3031 7.47798 5.20522 7.51885C5.10734 7.55972 4.99963 7.57042 4.89572 7.54958C4.7918 7.52874 4.69635 7.47731 4.62143 7.40179C4.54652 7.32627 4.4955 7.23006 4.47483 7.12531C4.45416 7.02056 4.46477 6.91198 4.50531 6.81331C4.54586 6.71464 4.61452 6.63031 4.70261 6.57097C4.7907 6.51164 4.89427 6.47997 5.00022 6.47997C5.1423 6.47997 5.27855 6.53686 5.37901 6.63813C5.47947 6.7394 5.53591 6.87675 5.53591 7.01996Z"
                  fill="black"
                />
              </svg>

              {/* Document Icon */}
              <svg
                width="24"
                height="23"
                x={59}
                viewBox="0 0 24 23"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M2.93879 14.375H0.979597C0.719791 14.375 0.470627 14.476 0.286917 14.6557C0.103207 14.8354 0 15.0792 0 15.3333V22.0417C0 22.2958 0.103207 22.5396 0.286917 22.7193C0.470627 22.899 0.719791 23 0.979597 23H2.93879C4.10791 23 5.22915 22.5456 6.05585 21.7369C6.88254 20.9281 7.34697 19.8312 7.34697 18.6875C7.34697 17.5438 6.88254 16.4469 6.05585 15.6381C5.22915 14.8294 4.10791 14.375 2.93879 14.375ZM2.93879 21.0833H1.95919V16.2917H2.93879C3.5883 16.2917 4.21121 16.5441 4.67049 16.9934C5.12976 17.4427 5.38778 18.0521 5.38778 18.6875C5.38778 19.3229 5.12976 19.9323 4.67049 20.3816C4.21121 20.8309 3.5883 21.0833 2.93879 21.0833ZM23.6977 20.4952C23.8854 20.6709 23.994 20.9123 23.9998 21.1664C24.0055 21.4205 23.9078 21.6664 23.7283 21.85C23.3872 22.2092 22.9747 22.4965 22.5161 22.6942C22.0575 22.892 21.5625 22.996 21.0613 23C18.9001 23 17.1429 21.0654 17.1429 18.6875C17.1429 16.3096 18.9001 14.375 21.0613 14.375C21.5625 14.379 22.0575 14.483 22.5161 14.6808C22.9747 14.8785 23.3872 15.1658 23.7283 15.525C23.9039 15.7093 23.9983 15.9539 23.991 16.2059C23.9836 16.4578 23.8751 16.6967 23.689 16.8709C23.5028 17.0452 23.254 17.1406 22.9964 17.1367C22.7389 17.1328 22.4932 17.0297 22.3128 16.8499C22.1538 16.6787 21.9608 16.5409 21.7457 16.445C21.5305 16.349 21.2977 16.2968 21.0613 16.2917C19.9813 16.2917 19.1021 17.3698 19.1021 18.6875C19.1021 20.0052 19.9813 21.0833 21.0613 21.0833C21.2977 21.0782 21.5305 21.026 21.7457 20.93C21.9608 20.8341 22.1538 20.6963 22.3128 20.5251C22.4924 20.3415 22.7392 20.2352 22.9989 20.2296C23.2586 20.2239 23.5099 20.3195 23.6977 20.4952ZM12.245 14.375C10.0837 14.375 8.32657 16.3096 8.32657 18.6875C8.32657 21.0654 10.0837 23 12.245 23C14.4062 23 16.1633 21.0654 16.1633 18.6875C16.1633 16.3096 14.4062 14.375 12.245 14.375ZM12.245 21.0833C11.165 21.0833 10.2858 20.0052 10.2858 18.6875C10.2858 17.3698 11.165 16.2917 12.245 16.2917C13.325 16.2917 14.2042 17.3698 14.2042 18.6875C14.2042 20.0052 13.325 21.0833 12.245 21.0833ZM2.44899 11.5C2.7088 11.5 2.95796 11.399 3.14167 11.2193C3.32538 11.0396 3.42859 10.7958 3.42859 10.5417V1.91667H14.2042V7.66667C14.2042 7.92083 14.3074 8.16459 14.4911 8.34431C14.6748 8.52403 14.9239 8.625 15.1837 8.625H21.0613V10.5417C21.0613 10.7958 21.1645 11.0396 21.3482 11.2193C21.532 11.399 21.7811 11.5 22.0409 11.5C22.3007 11.5 22.5499 11.399 22.7336 11.2193C22.9173 11.0396 23.0205 10.7958 23.0205 10.5417V7.66667C23.0206 7.54078 22.9954 7.41611 22.9462 7.29977C22.897 7.18343 22.8249 7.07771 22.734 6.98865L15.8768 0.280313C15.7858 0.191347 15.6777 0.1208 15.5588 0.0727029C15.4399 0.024606 15.3124 -9.86948e-05 15.1837 2.96315e-07H3.42859C2.90898 2.96315e-07 2.41065 0.201934 2.04323 0.561379C1.67581 0.920824 1.46939 1.40834 1.46939 1.91667V10.5417C1.46939 10.7958 1.5726 11.0396 1.75631 11.2193C1.94002 11.399 2.18919 11.5 2.44899 11.5ZM16.1633 3.27151L19.6764 6.70833H16.1633V3.27151Z"
                  fill="black"
                />
              </svg>
              {/* Offer Icon */}
              <svg
                width="21"
                height="23"
                x={85}
                viewBox="0 0 21 23"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M20.7208 6.33185L14.039 0.253969C13.9503 0.173364 13.845 0.109447 13.7291 0.0658703C13.6132 0.0222935 13.489 -8.94195e-05 13.3636 2.68468e-07H1.90909C1.40277 2.68468e-07 0.917184 0.182956 0.55916 0.508621C0.201136 0.834285 0 1.27598 0 1.73654V9.55096C0 9.78124 0.100568 10.0021 0.27958 10.1649C0.458592 10.3278 0.701384 10.4192 0.954545 10.4192C1.20771 10.4192 1.4505 10.3278 1.62951 10.1649C1.80852 10.0021 1.90909 9.78124 1.90909 9.55096V1.73654H12.4091V6.94615C12.4091 7.17643 12.5097 7.39728 12.6887 7.56011C12.8677 7.72295 13.1105 7.81442 13.3636 7.81442H19.0909V20.8385H15.2727C15.0196 20.8385 14.7768 20.9299 14.5978 21.0928C14.4187 21.2556 14.3182 21.4765 14.3182 21.7067C14.3182 21.937 14.4187 22.1579 14.5978 22.3207C14.7768 22.4835 15.0196 22.575 15.2727 22.575H19.0909C19.5972 22.575 20.0828 22.392 20.4408 22.0664C20.7989 21.7407 21 21.299 21 20.8385V6.94615C21.0001 6.8321 20.9755 6.71914 20.9276 6.61374C20.8797 6.50833 20.8094 6.41255 20.7208 6.33185ZM14.3182 2.96405L17.7414 6.07789H14.3182V2.96405Z"
                  fill="black"
                />
                <path
                  d="M9.28693 14.435H8.63068V11.6493H8.84943C9.25554 11.6493 9.64502 11.796 9.93218 12.0572C10.2193 12.3184 10.3807 12.6727 10.3807 13.0421C10.3807 13.2004 10.4498 13.3523 10.5729 13.4642C10.696 13.5762 10.8629 13.6391 11.0369 13.6391C11.211 13.6391 11.3779 13.5762 11.501 13.4642C11.624 13.3523 11.6932 13.2004 11.6932 13.0421C11.6923 12.3563 11.3924 11.6988 10.8593 11.2139C10.3262 10.729 9.60337 10.4562 8.84943 10.4554H8.63068V9.85847C8.63068 9.70015 8.56154 9.54832 8.43846 9.43637C8.31539 9.32443 8.14847 9.26154 7.97443 9.26154C7.80038 9.26154 7.63346 9.32443 7.51039 9.43637C7.38732 9.54832 7.31818 9.70015 7.31818 9.85847V10.4554H7.09943C6.34522 10.4554 5.6219 10.7279 5.08859 11.213C4.55528 11.6981 4.25568 12.3561 4.25568 13.0421C4.25568 13.7282 4.55528 14.3861 5.08859 14.8712C5.6219 15.3563 6.34522 15.6288 7.09943 15.6288H7.31818V18.4145H6.66193C6.25581 18.4145 5.86633 18.2678 5.57917 18.0066C5.292 17.7454 5.13068 17.3911 5.13068 17.0217C5.13068 16.8634 5.06154 16.7115 4.93847 16.5996C4.81539 16.4876 4.64847 16.4248 4.47443 16.4248C4.30038 16.4248 4.13346 16.4876 4.01039 16.5996C3.88732 16.7115 3.81818 16.8634 3.81818 17.0217C3.81904 17.7075 4.11893 18.365 4.65205 18.8499C5.18517 19.3348 5.90798 19.6076 6.66193 19.6084H7.31818V20.2053C7.31818 20.3637 7.38732 20.5155 7.51039 20.6274C7.63346 20.7394 7.80038 20.8023 7.97443 20.8023C8.14847 20.8023 8.31539 20.7394 8.43846 20.6274C8.56154 20.5155 8.63068 20.3637 8.63068 20.2053V19.6084H9.28693C10.0411 19.6084 10.7645 19.3359 11.2978 18.8508C11.8311 18.3657 12.1307 17.7077 12.1307 17.0217C12.1307 16.3357 11.8311 15.6777 11.2978 15.1926C10.7645 14.7075 10.0411 14.435 9.28693 14.435ZM7.09943 14.435C6.69331 14.435 6.30383 14.2882 6.01667 14.027C5.7295 13.7658 5.56818 13.4115 5.56818 13.0421C5.56818 12.6727 5.7295 12.3184 6.01667 12.0572C6.30383 11.796 6.69331 11.6493 7.09943 11.6493H7.31818V14.435H7.09943ZM9.28693 18.4145H8.63068V15.6288H9.28693C9.69304 15.6288 10.0825 15.7756 10.3697 16.0368C10.6568 16.298 10.8182 16.6523 10.8182 17.0217C10.8182 17.3911 10.6568 17.7454 10.3697 18.0066C10.0825 18.2678 9.69304 18.4145 9.28693 18.4145Z"
                  fill="black"
                />
              </svg>
            </g>
          </g>
        </g>

        {/* Bottom Bar with Down Arrow */}
        <g
          className="bottom-bar"
          transform={
            arrowRotated
              ? 'translate(139,160) rotate(180 11 8)'
              : 'translate(139, 168)'
          }
          onClick={toggleNotesPanel}
          style={{ cursor: 'pointer' }}
        >
          <rect x="-2" y="-5" width="25" height="15" fill="transparent" />
          <svg
            width="22"
            height="16"
            viewBox="0 0 22 16"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g filter="url(#filter0_d_808_149)">
              <path
                d="M10.646 6.48815L5.64597 1.80065C5.59952 1.7571 5.56267 1.7054 5.53753 1.64849C5.51238 1.59159 5.49944 1.5306 5.49944 1.46901C5.49944 1.40742 5.51238 1.34643 5.53753 1.28953C5.56267 1.23262 5.59952 1.18092 5.64597 1.13737C5.69243 1.09382 5.74758 1.05927 5.80827 1.0357C5.86897 1.01213 5.93402 1 5.99972 1C6.06542 1 6.13047 1.01213 6.19117 1.0357C6.25187 1.05927 6.30702 1.09382 6.35347 1.13737L10.9997 5.49382L15.646 1.13737C15.7398 1.04941 15.867 1 15.9997 1C16.1324 1 16.2597 1.04941 16.3535 1.13737C16.4473 1.22533 16.5 1.34462 16.5 1.46901C16.5 1.5934 16.4473 1.71269 16.3535 1.80065L11.3535 6.48815C11.307 6.53173 11.2519 6.56631 11.1912 6.5899C11.1305 6.61349 11.0654 6.62563 10.9997 6.62563C10.934 6.62563 10.869 6.61349 10.8083 6.5899C10.7476 6.56631 10.6924 6.53173 10.646 6.48815Z"
                fill="black"
              />
              <path
                d="M6.69547 0.772624L6.69544 0.772601C6.60124 0.684288 6.49113 0.615809 6.37216 0.56961C6.25323 0.523423 6.12676 0.5 5.99972 0.5C5.87268 0.5 5.74622 0.523423 5.62728 0.56961C5.50831 0.615808 5.3982 0.684288 5.304 0.772601C5.20973 0.860977 5.13311 0.967658 5.08018 1.08746C5.0272 1.20735 4.99944 1.33711 4.99944 1.46901C4.99944 1.60091 5.0272 1.73067 5.08018 1.85056C5.13311 1.97036 5.20973 2.07704 5.304 2.16542L10.3038 6.85273C10.398 6.94113 10.5081 7.00969 10.6271 7.05594C10.7461 7.10218 10.8726 7.12563 10.9997 7.12563C11.1268 7.12563 11.2533 7.10218 11.3723 7.05594C11.4913 7.00969 11.6015 6.94113 11.6956 6.85273L16.6954 2.16542C16.8862 1.98655 17 1.7368 17 1.46901C17 1.20122 16.8862 0.951467 16.6954 0.772601C16.5057 0.59476 16.255 0.5 15.9997 0.5C15.7445 0.5 15.4937 0.59476 15.304 0.772601L15.304 0.772624L10.9997 4.80841L6.69547 0.772624Z"
                stroke="black"
              />
            </g>
            <defs>
              <filter
                id="filter0_d_808_149"
                x="0.499451"
                y="0"
                width="21.0005"
                height="15.6256"
                filterUnits="userSpaceOnUse"
                colorInterpolationFilters="sRGB"
              >
                <feFlood floodOpacity="0" result="BackgroundImageFix" />
                <feColorMatrix
                  in="SourceAlpha"
                  type="matrix"
                  values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                  result="hardAlpha"
                />
                <feOffset dy="4" />
                <feGaussianBlur stdDeviation="2" />
                <feComposite in2="hardAlpha" operator="out" />
                <feColorMatrix
                  type="matrix"
                  values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
                />
                <feBlend
                  mode="normal"
                  in2="BackgroundImageFix"
                  result="effect1_dropShadow_808_149"
                />
                <feBlend
                  mode="normal"
                  in="SourceGraphic"
                  in2="effect1_dropShadow_808_149"
                  result="shape"
                />
              </filter>
            </defs>
          </svg>
        </g>
      </g>
    </g>
  );
};

export default React.memo(Card);
